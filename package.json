{
  "name": "database-notebook",
  "displayName": "Database notebook",
  "description": "Javascript, SQL creation and execution, Markdown, etc. can be centrally managed in a file format called a notebook. Database manager for MySQL, PostgreSQL, SQLServer, SQLite, Redis, AWS, Keycloak and Auth0. Evaluate SQL statements with AI.",
  "version": "0.8.11",
  "publisher": "HirotakaYoshioka",
  "author": "l-v-yonsama <32474032+l-v-yonsama@users.noreply.github.com>",
  "icon": "media/logo128.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/l-v-yonsama/db-notebook"
  },
  "preview": false,
  "engines": {
    "vscode": "^1.46.0",
    "node": ">= 18"
  },
  "categories": [
    "Programming Languages",
    "Data Science",
    "Notebooks",
    "Visualization"
  ],
  "keywords": [
    "SQL",
    "MySQL",
    "PostgreSQL",
    "SQLServer",
    "SQLite",
    "Redis",
    "AWS",
    "DynamoDB",
    "Keycloak",
    "Auth0",
    "editor",
    "viewer",
    "table",
    "diff",
    "Har",
    "HarViewer",
    "CSV",
    "CsvViewer"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true
    },
    "virtualWorkspaces": true
  },
  "activationEvents": [
    "onNotebook:database-notebook-type"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "cwql",
        "filenames": [
          "*.cwql"
        ],
        "extensions": [
          ".cwql"
        ],
        "aliases": [
          "CloudWatch logs Query",
          "CloudWatch",
          "cloudwatch"
        ],
        "configuration": "./languages/cwql/cwql.json",
        "icon": {
          "dark": "media/dark/checklist.svg",
          "light": "media/light/checklist.svg"
        }
      },
      {
        "id": "rrule",
        "filenames": [
          "*.rrule"
        ],
        "extensions": [
          ".rrule"
        ],
        "aliases": [
          "Record rule"
        ],
        "icon": {
          "dark": "media/dark/checklist.svg",
          "light": "media/light/checklist.svg"
        }
      },
      {
        "id": "cresolver",
        "filenames": [
          "*.cresolver"
        ],
        "extensions": [
          ".cresolver"
        ],
        "aliases": [
          "Code resolver"
        ],
        "icon": {
          "dark": "media/dark/replace.svg",
          "light": "media/light/replace.svg"
        }
      },
      {
        "id": "db-notebook",
        "aliases": [
          "Database notebook"
        ],
        "filenames": [
          "*.dbn"
        ],
        "extensions": [
          ".dbn"
        ],
        "icon": {
          "dark": "media/dark/database.svg",
          "light": "media/light/database.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "cwql",
        "scopeName": "source.cloudwatch",
        "path": "./languages/cwql/syntaxe.json"
      }
    ],
    "notebooks": [
      {
        "type": "database-notebook-type",
        "displayName": "Database Notebook",
        "selector": [
          {
            "filenamePattern": "*.dbn"
          }
        ]
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "database-notebook",
          "title": "DB Notebook",
          "icon": "media/dark/database.svg"
        }
      ],
      "panel": [
        {
          "id": "database-notebook-view-rdh",
          "title": "ResultSets",
          "icon": "$(database)"
        },
        {
          "id": "database-notebook-view-diff-rdh",
          "title": "Diff in ResultSets",
          "icon": "$(database)"
        },
        {
          "id": "database-notebook-view-count-for-all-tables",
          "title": "Count for all tables",
          "icon": "$(symbol-numeric)"
        },
        {
          "id": "database-notebook-view-charts",
          "title": "Charts",
          "icon": "$(symbol-numeric)"
        },
        {
          "id": "database-notebook-view-tools",
          "title": "Tools",
          "icon": "$(symbol-numeric)"
        },
        {
          "id": "database-notebook-view-subscription-payloads",
          "title": "Subscription payloads",
          "icon": "$(symbol-numeric)"
        }
      ]
    },
    "views": {
      "database-notebook": [
        {
          "id": "database-notebook-connections",
          "name": "DB Explorer",
          "visibility": "visible",
          "icon": "media/logo.png",
          "contextualTitle": "Connections"
        },
        {
          "type": "webview",
          "id": "database-notebook.connectionForm",
          "name": "Resource properties",
          "contextualTitle": "Resource properties",
          "visibility": "visible"
        },
        {
          "id": "database-notebook-histories",
          "name": "SQL histories",
          "visibility": "visible",
          "icon": "media/logo.png",
          "contextualTitle": "Histories"
        },
        {
          "id": "database-notebook-helpfeedback",
          "name": "Help",
          "visibility": "collapsed",
          "icon": "media/logo.png",
          "contextualTitle": "Help"
        }
      ],
      "database-notebook-view-rdh": [
        {
          "type": "webview",
          "id": "database-notebook.view.bottom.mdh",
          "name": "ResultSets",
          "contextualTitle": "ResultSets",
          "when": "database-notebook.view.bottom.mdh.visible"
        }
      ],
      "database-notebook-view-diff-rdh": [
        {
          "type": "webview",
          "id": "database-notebook.view.bottom.diff-mdh",
          "name": "Diff in ResultSets",
          "contextualTitle": "Diff in ResultSets",
          "when": "database-notebook.view.bottom.diff-mdh.visible"
        }
      ],
      "database-notebook-view-charts": [
        {
          "type": "webview",
          "id": "database-notebook.view.bottom.charts",
          "name": "Charts",
          "contextualTitle": "Charts",
          "when": "database-notebook.view.bottom.charts.visible"
        }
      ],
      "database-notebook-view-count-for-all-tables": [
        {
          "type": "webview",
          "id": "database-notebook.view.bottom.count-for-all-tables",
          "name": "Count for all tables",
          "contextualTitle": "Count for all tables",
          "when": "database-notebook.view.bottom.count-for-all-tables.visible"
        }
      ],
      "database-notebook-view-tools": [
        {
          "type": "webview",
          "id": "database-notebook.view.bottom.tools",
          "name": "Tools",
          "contextualTitle": "Tools",
          "when": "database-notebook.view.bottom.tools.visible"
        }
      ],
      "database-notebook-view-subscription-payloads": [
        {
          "type": "webview",
          "id": "database-notebook.view.bottom.subscription-payloads",
          "name": "Subscription payloads",
          "contextualTitle": "Payloads",
          "when": "database-notebook.view.bottom.subscription-payloads.visible"
        }
      ]
    },
    "menus": {
      "file/newFile": [
        {
          "command": "database-notebook.create-blank-notebook",
          "group": "notebook"
        },
        {
          "command": "database-notebook.create-blank-code-resolver",
          "group": "notebook"
        }
      ],
      "view/item/context": [
        {
          "command": "database-notebook.retrieve-resources",
          "when": "view == database-notebook-connections && viewItem =~ /^Connection,.+support:true,false$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.retrieve-resources",
          "when": "view == database-notebook-connections && viewItem =~ /^Connection,.+support:true,false$/",
          "group": "others@3"
        },
        {
          "command": "database-notebook.connect",
          "when": "view == database-notebook-connections && viewItem =~ /^.+dbType:Mqtt.+connected:false,support:false,false$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.connect",
          "when": "view == database-notebook-connections && viewItem =~ /^.+dbType:Mqtt.+connected:false,support:false,false$/",
          "group": "others@3"
        },
        {
          "command": "database-notebook.disconnect",
          "when": "view == database-notebook-connections && viewItem =~ /^.+dbType:Mqtt.+connected:true,support:false,false$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.disconnect",
          "when": "view == database-notebook-connections && viewItem =~ /^.+dbType:Mqtt.+connected:true,support:false,false$/",
          "group": "others@3"
        },
        {
          "command": "database-notebook.add-subscription",
          "when": "view == database-notebook-connections && viewItem =~ /^MqttDatabase.*$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.add-subscription",
          "when": "view == database-notebook-connections && viewItem =~ /^MqttDatabase.*$/",
          "group": "others@3"
        },
        {
          "command": "database-notebook.remove-subscription",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*isSubscribed=false.*$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.remove-subscription",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*isSubscribed=false.*$/",
          "group": "others@3"
        },
        {
          "command": "database-notebook.edit-subscription",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*isSubscribed=false.*$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.edit-subscription",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*isSubscribed=false.*$/",
          "group": "others@3"
        },
        {
          "command": "database-notebook.subscribe",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*isSubscribed=false.*$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.subscribe",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*isSubscribed=false.*$/",
          "group": "others@3"
        },
        {
          "command": "database-notebook.unsubscribe",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*isSubscribed=true.*$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.unsubscribe",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*isSubscribed=true.*$/",
          "group": "others@3"
        },
        {
          "command": "database-notebook.show-publish-editor-panel",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*/",
          "group": "inline"
        },
        {
          "command": "database-notebook.show-publish-editor-panel",
          "when": "view == database-notebook-connections && viewItem =~ /^Subscription.*/",
          "group": "z-record-rule@8"
        },
        {
          "command": "database-notebook.specify-default-connection-for-sql-cell",
          "when": "view == database-notebook-connections && viewItem =~ /^Connection,.+CD:false.*support:true,.+$/",
          "group": "others@4"
        },
        {
          "command": "database-notebook.clear-default-connection-for-sql-cell",
          "when": "view == database-notebook-connections && viewItem =~ /^Connection,.+CD:true.*support:true,.+$/",
          "group": "others@4"
        },
        {
          "command": "database-notebook.show-connection-setting",
          "when": "view == database-notebook-connections &&  viewItem =~ /^Connection,.+$/",
          "group": "connection-setting@1"
        },
        {
          "command": "database-notebook.edit-connection-setting",
          "when": "view == database-notebook-connections && viewItem =~ /^Connection,.+false$/",
          "group": "connection-setting@1"
        },
        {
          "command": "database-notebook.duplicate-connection-setting",
          "when": "view == database-notebook-connections && viewItem =~ /^Connection,.+$/",
          "group": "connection-setting@1"
        },
        {
          "command": "database-notebook.delete-connection-setting",
          "when": "view == database-notebook-connections && viewItem =~ /^Connection,.+false$/",
          "group": "connection-setting@1"
        },
        {
          "command": "database-notebook.get-locks",
          "when": "view == database-notebook-connections && viewItem =~ /^RdsDatabase.*,showSessions.*/",
          "group": "inline"
        },
        {
          "command": "database-notebook.get-locks",
          "when": "view == database-notebook-connections && viewItem =~ /^RdsDatabase.*,showSessions.*/",
          "group": "db-resourc@2"
        },
        {
          "command": "database-notebook.get-sessions",
          "when": "view == database-notebook-connections && viewItem =~ /^RdsDatabase.*,showSessions.*/",
          "group": "inline"
        },
        {
          "command": "database-notebook.get-sessions",
          "when": "view == database-notebook-connections && viewItem =~ /^RdsDatabase.*,showSessions.*/",
          "group": "db-resourc@2"
        },
        {
          "command": "database-notebook.count-for-all-tables",
          "when": "view == database-notebook-connections && viewItem =~ /^Schema.*/",
          "group": "inline"
        },
        {
          "command": "database-notebook.count-for-all-tables",
          "when": "view == database-notebook-connections && viewItem =~ /^Schema.*/",
          "group": "db-resourc@2"
        },
        {
          "command": "database-notebook.create-er-diagram",
          "when": "view == database-notebook-connections && viewItem =~ /^Table.*/",
          "group": "inline"
        },
        {
          "command": "database-notebook.create-er-diagram",
          "when": "view == database-notebook-connections && viewItem =~ /^Table.*/",
          "group": "er-diagram@5"
        },
        {
          "command": "database-notebook.create-er-diagram-with-settings",
          "when": "view == database-notebook-connections && viewItem =~ /^Table.*/",
          "group": "er-diagram@5"
        },
        {
          "command": "database-notebook.write-er-diagram-to-clipboard",
          "when": "view == database-notebook-connections && viewItem =~ /^Table.*/",
          "group": "er-diagram@5"
        },
        {
          "command": "database-notebook.retrieve-table-records",
          "when": "view == database-notebook-connections && viewItem =~ /^(Dynamo)?Table.*/",
          "group": "inline"
        },
        {
          "command": "database-notebook.create-insert-script-with-settings",
          "when": "view == database-notebook-connections && viewItem =~ /^Table.*/",
          "group": "script@6"
        },
        {
          "command": "database-notebook.retrieve-table-records",
          "when": "view == database-notebook-connections && viewItem =~ /^Table.*/",
          "group": "db-resourc@2"
        },
        {
          "command": "database-notebook.create-blank-record-rule",
          "when": "view == database-notebook-connections && viewItem =~ /^Table.*/",
          "group": "inline"
        },
        {
          "command": "database-notebook.create-blank-record-rule",
          "when": "view == database-notebook-connections && viewItem =~ /^Table.*/",
          "group": "z-record-rule@8"
        },
        {
          "command": "database-notebook.show-scan-panel",
          "when": "view == database-notebook-connections && viewItem =~ /^.+scannable$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.show-scan-panel",
          "when": "view == database-notebook-connections && viewItem =~ /^.+scannable$/",
          "group": "db-resourc@2"
        },
        {
          "command": "database-notebook.show-dynamo-query-panel",
          "when": "view == database-notebook-connections && viewItem =~ /^DynamoTable.+$/",
          "group": "inline"
        },
        {
          "command": "database-notebook.show-dynamo-query-panel",
          "when": "view == database-notebook-connections && viewItem =~ /^DynamoTable.+$/",
          "group": "db-resourc@2"
        },
        {
          "command": "database-notebook.flush-db",
          "when": "view == database-notebook-connections && viewItem =~ /^.+dbType:Redis.*/",
          "group": "db-resourc@2"
        },
        {
          "command": "database-notebook.histories.execute",
          "when": "view == database-notebook-histories",
          "group": "inline"
        },
        {
          "command": "database-notebook.histories.open",
          "when": "view == database-notebook-histories",
          "group": "inline"
        },
        {
          "command": "database-notebook.histories.delete",
          "when": "view == database-notebook-histories",
          "group": "inline"
        },
        {
          "command": "database-notebook.open-chat-2-query",
          "when": "view == database-notebook-connections && viewItem =~ /^Schema.*/",
          "group": "inline"
        },
        {
          "command": "database-notebook.open-chat-2-query",
          "when": "view == database-notebook-connections && viewItem =~ /^Schema.*/",
          "group": "db-resourc@10"
        }
      ],
      "view/title": [
        {
          "command": "database-notebook.refresh-resources",
          "when": "view == database-notebook-connections",
          "group": "navigation"
        },
        {
          "command": "database-notebook.create-connection-setting",
          "when": "view == database-notebook-connections",
          "group": "navigation"
        },
        {
          "command": "database-notebook.refresh-resources",
          "when": "view == ResultSetsType",
          "group": "navigation"
        },
        {
          "command": "database-notebook.refresh-sql-histories",
          "when": "view == database-notebook-histories",
          "group": "navigation"
        },
        {
          "command": "database-notebook.delete-all-sql-histories",
          "when": "view == database-notebook-histories",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "database-notebook.refresh-resources",
          "when": "view == ResultSetsType",
          "group": "navigation"
        },
        {
          "command": "database-notebook.show-har-file",
          "when": "resourceExtname == .har",
          "group": "navigation"
        },
        {
          "command": "database-notebook.show-csv-file",
          "when": "resourceExtname == .csv",
          "group": "navigation"
        },
        {
          "command": "database-notebook.create-dbn-from-sql",
          "when": "resourceExtname == .sql",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "command": "database-notebook.show-har-file",
          "when": "resourceExtname == .har",
          "group": "navigation"
        },
        {
          "command": "database-notebook.show-csv-file",
          "when": "resourceExtname == .csv",
          "group": "navigation"
        },
        {
          "command": "database-notebook.create-dbn-from-sql",
          "when": "resourceExtname == .sql",
          "group": "navigation"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "database-notebook.toolbar.show-all-variables",
          "group": "navigation/execute@1",
          "when": "notebookType == 'database-notebook-type' && visibleVariables"
        },
        {
          "command": "database-notebook.toolbar.show-all-rdh",
          "group": "navigation/execute@1",
          "when": "notebookType == 'database-notebook-type' && visibleRdh"
        },
        {
          "command": "database-notebook.toolbar.specify-using-database-all",
          "group": "navigation/execute@1",
          "when": "notebookType == 'database-notebook-type' && hasSql"
        },
        {
          "command": "database-notebook.toolbar.specify-connection-all",
          "group": "navigation/execute@1",
          "when": "notebookType == 'database-notebook-type' && hasSql"
        },
        {
          "command": "database-notebook.toolbar.export-in-html",
          "group": "navigation/execute@1",
          "when": "notebookType == 'database-notebook-type'"
        }
      ],
      "notebook/cell/execute": [
        {
          "command": "database-notebook.cell-execute-query",
          "group": "navigation/cell1/execute@1",
          "when": "notebookType == 'database-notebook-type' && cellLangId == 'sql'"
        },
        {
          "command": "database-notebook.cell-execute-explain",
          "group": "navigation/cell2/execute@2",
          "when": "notebookType == 'database-notebook-type' && cellLangId == 'sql'"
        },
        {
          "command": "database-notebook.cell-execute-explain-analyze",
          "group": "navigation/cell2/execute@3",
          "when": "notebookType == 'database-notebook-type' && cellLangId == 'sql'"
        }
      ],
      "notebook/cell/title": [
        {
          "command": "database-notebook.cell-toolbar-lm",
          "group": "inline",
          "when": "notebookType == 'database-notebook-type' && (cellLangId == 'sql' ) && cellMetaConnectionName !== '' "
        },
        {
          "command": "database-notebook.cell-toolbar-format",
          "group": "inline",
          "when": "notebookType == 'database-notebook-type' && (cellLangId == 'sql' || cellLangId == 'json' ) "
        }
      ]
    },
    "customEditors": [
      {
        "viewType": "database-notebook.ruleEditor",
        "displayName": "DB record rule editor",
        "selector": [
          {
            "filenamePattern": "*.rrule"
          }
        ]
      },
      {
        "viewType": "database-notebook.codeResolverEditor",
        "displayName": "code label resolver editor",
        "selector": [
          {
            "filenamePattern": "*.cresolver"
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "database-notebook.create-blank-record-rule",
        "title": "Create a new blank DB record rule",
        "shortTitle": "Database Record rule",
        "category": "Database Notebook",
        "icon": "$(checklist)"
      },
      {
        "command": "database-notebook.create-blank-code-resolver",
        "title": "Create a new blank Code label resolver",
        "shortTitle": "Code label resolver",
        "category": "Database Notebook",
        "icon": "$(checklist)"
      },
      {
        "command": "database-notebook.create-blank-notebook",
        "title": "Create a new blank Database Notebook",
        "shortTitle": "Database Notebook",
        "category": "Database Notebook"
      },
      {
        "command": "database-notebook.create-er-diagram",
        "title": "Create ER diagram",
        "icon": "$(git-pull-request)",
        "category": "er-diagram"
      },
      {
        "command": "database-notebook.create-er-diagram-with-settings",
        "title": "Create ER diagram with settings",
        "icon": "$(git-pull-request)",
        "category": "er-diagram"
      },
      {
        "command": "database-notebook.write-er-diagram-to-clipboard",
        "title": "Write ER diagram to clipboard",
        "icon": "$(clippy)",
        "category": "er-diagram"
      },
      {
        "command": "database-notebook.create-insert-script-with-settings",
        "title": "Create Insert script with settings",
        "icon": "$(add)",
        "category": "create-script"
      },
      {
        "command": "database-notebook.show-publish-editor-panel",
        "title": "Open publish editor",
        "icon": "$(empty-window)"
      },
      {
        "command": "database-notebook.create-connection-setting",
        "title": "Create connection setting",
        "icon": "$(add)",
        "category": "connection-setting"
      },
      {
        "command": "database-notebook.show-connection-setting",
        "title": "Show setting",
        "icon": "$(info)",
        "category": "connection-setting"
      },
      {
        "command": "database-notebook.edit-connection-setting",
        "title": "Edit setting",
        "icon": "$(edit)",
        "category": "connection-setting"
      },
      {
        "command": "database-notebook.duplicate-connection-setting",
        "title": "Duplicate setting",
        "icon": "$(files)",
        "category": "connection-setting"
      },
      {
        "command": "database-notebook.delete-connection-setting",
        "title": "Delete setting",
        "icon": "$(trash)",
        "category": "connection-setting"
      },
      {
        "command": "database-notebook.connect",
        "title": "Connect",
        "icon": "$(pass)",
        "category": "connect-disconnect"
      },
      {
        "command": "database-notebook.disconnect",
        "title": "Disconnect",
        "icon": "$(error)",
        "category": "connect-disconnect"
      },
      {
        "command": "database-notebook.add-subscription",
        "title": "New Subscription",
        "icon": "$(add)",
        "category": "connect-disconnect"
      },
      {
        "command": "database-notebook.remove-subscription",
        "title": "Remove Subscription",
        "icon": "$(trash)",
        "category": "connect-disconnect"
      },
      {
        "command": "database-notebook.edit-subscription",
        "title": "Edit Subscription",
        "icon": "$(edit)",
        "category": "connect-disconnect"
      },
      {
        "command": "database-notebook.subscribe",
        "title": "Subscribe",
        "icon": "$(play-circle)",
        "category": "connect-disconnect"
      },
      {
        "command": "database-notebook.unsubscribe",
        "title": "Unsubscribe",
        "icon": "$(error)",
        "category": "connect-disconnect"
      },
      {
        "command": "database-notebook.show-resource-properties",
        "title": "Show resource properties",
        "icon": "$(info)"
      },
      {
        "command": "database-notebook.refresh-resources",
        "title": "Refresh Setting Panel",
        "shortTitle": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "database-notebook.retrieve-resources",
        "title": "Retrieve DB Resources",
        "shortTitle": "Retrieve",
        "icon": "$(list-tree)"
      },
      {
        "command": "database-notebook.specify-default-connection-for-sql-cell",
        "title": "Specify default connection for new SQL cell",
        "shortTitle": "Specify default con.",
        "icon": "$(database)"
      },
      {
        "command": "database-notebook.clear-default-connection-for-sql-cell",
        "title": "Clear default connection for new SQL cell",
        "shortTitle": "Clear default con.",
        "icon": "$(database)"
      },
      {
        "command": "database-notebook.get-locks",
        "title": "Show locks",
        "icon": "$(lock)"
      },
      {
        "command": "database-notebook.get-sessions",
        "title": "Show sessions",
        "icon": "$(info)"
      },
      {
        "command": "database-notebook.count-for-all-tables",
        "title": "Count Table Records",
        "shortTitle": "Count",
        "icon": "$(list-ordered)"
      },
      {
        "command": "database-notebook.retrieve-table-records",
        "title": "Retrieve Table Records",
        "shortTitle": "Retrieve",
        "icon": "$(table)"
      },
      {
        "command": "database-notebook.flush-db",
        "title": "Delete all the keys of selected DB",
        "shortTitle": "Flush db",
        "icon": "$(trash)"
      },
      {
        "command": "database-notebook.show-scan-panel",
        "title": "Open scan panel",
        "icon": "$(book)"
      },
      {
        "command": "database-notebook.show-dynamo-query-panel",
        "title": "Open Dynamo query panel",
        "icon": "$(filter)"
      },
      {
        "command": "database-notebook.cell.open-mdh",
        "title": "Open Resultset Data Holder",
        "icon": "$(table)"
      },
      {
        "command": "database-notebook.cell.specify-connection-to-use",
        "title": "Specify connection to use",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "database-notebook.cell.mark-cell-as-skip",
        "title": "Toggle skip state",
        "shortTitle": "Toggle skip",
        "icon": "$(debug-step-over)"
      },
      {
        "command": "database-notebook.cell.mark-cell-as-pre-execution",
        "title": "Mark cell as pre-execution",
        "icon": "$(debug-step-into)"
      },
      {
        "command": "database-notebook.cell.show-metadata-setting",
        "title": "Show metadata settings",
        "icon": "$(gear)"
      },
      {
        "command": "database-notebook.toolbar.show-all-variables",
        "title": "Open Variables",
        "icon": "$(symbol-variable)"
      },
      {
        "command": "database-notebook.toolbar.show-all-rdh",
        "title": "Open ResultSets",
        "icon": "$(table)"
      },
      {
        "command": "database-notebook.toolbar.specify-connection-all",
        "title": "Specify connection in all SQL Cells",
        "shortTitle": "Specify connection all",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "database-notebook.toolbar.specify-using-database-all",
        "title": "Specify USE-DB in all SQL Cells",
        "shortTitle": "Specify USE-DB all",
        "icon": "$(database)"
      },
      {
        "command": "database-notebook.toolbar.export-in-html",
        "title": "Output in HTML",
        "shortTitle": "Output HTML",
        "icon": "$(output)"
      },
      {
        "command": "database-notebook.cell-execute-query",
        "title": "Execute query (Default)",
        "shortTitle": "Execute query",
        "icon": "$(play)"
      },
      {
        "command": "database-notebook.cell-execute-explain",
        "title": "Execute explain (Devises a query plan)",
        "shortTitle": "Explain",
        "icon": "$(debug-alt-small)"
      },
      {
        "command": "database-notebook.cell-execute-explain-analyze",
        "title": "Execute explain analyze (Displays actual execution time and statistics)",
        "shortTitle": "Explain analyze",
        "icon": "$(debug-alt-small)"
      },
      {
        "command": "database-notebook.cell-toolbar-lm",
        "title": "Activate the AI Assistant",
        "shortTitle": "Activate AI",
        "icon": "$(robot)"
      },
      {
        "command": "database-notebook.cell-toolbar-format",
        "title": "Format this document",
        "shortTitle": "Format",
        "icon": "$(word-wrap)"
      },
      {
        "command": "database-notebook.show-csv-file",
        "title": "Preview CSV file",
        "category": "DB Notebook CSV Viewer"
      },
      {
        "command": "database-notebook.create-dbn-from-sql",
        "title": "Create DB Notebook file",
        "shortTitle": "Create DB Notebook",
        "category": "DB Notebook"
      },
      {
        "command": "database-notebook.show-har-file",
        "title": "Preview HAR file",
        "category": "DB Notebook HAR Viewer"
      },
      {
        "command": "database-notebook.refresh-sql-histories",
        "title": "Refresh SQL histories",
        "shortTitle": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "database-notebook.delete-all-sql-histories",
        "title": "Delete all SQL histories",
        "shortTitle": "Delete all",
        "icon": "$(trash)"
      },
      {
        "command": "database-notebook.histories.execute",
        "title": "Execute selected sql",
        "shortTitle": "Execute",
        "icon": "$(play)"
      },
      {
        "command": "database-notebook.histories.open",
        "title": "Open selected sql",
        "shortTitle": "Open",
        "icon": "$(book)"
      },
      {
        "command": "database-notebook.histories.delete",
        "title": "Delete selected sql",
        "shortTitle": "Delete",
        "icon": "$(trash)"
      },
      {
        "command": "database-notebook.open-mdh-viewer",
        "title": "Open Resultset Data Holder",
        "icon": "$(table)"
      },
      {
        "command": "database-notebook.open-diff-mdh-viewer",
        "title": "Open Resultset Diff",
        "icon": "$(git-compare)"
      },
      {
        "command": "database-notebook.open-chat-2-query",
        "title": "Open Chat-to-query",
        "shortTitle": "Chat-to-query",
        "icon": "$(robot)"
      }
    ],
    "keybindings": [
      {
        "command": "database-notebook.cell.specify-connection-to-use",
        "key": "ctrl+alt+c",
        "when": "notebookType == 'database-notebook-type' && notebookCellListFocused && cellLangId == 'sql'"
      },
      {
        "command": "database-notebook.cell.mark-cell-as-skip",
        "key": "ctrl+alt+s",
        "when": "notebookType == 'database-notebook-type' && notebookCellListFocused && notebookCellType == 'code'"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Database notebook",
      "properties": {
        "sql-formatter.uppercase": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Converts reserved keywords to uppercase"
        },
        "sql-formatter.linesBetweenQueries": {
          "scope": "resource",
          "type": "number",
          "minimum": 1,
          "default": 2,
          "description": "How many newlines to insert between queries"
        },
        "sql-formatter.tabWidth": {
          "scope": "resource",
          "type": "number",
          "minimum": 1,
          "default": 2,
          "description": "Amount of indentation to use"
        },
        "node.Node path": {
          "scope": "resource",
          "type": "string",
          "default": "",
          "description": "Run Javascript on a custom Node installation. This can be a path to a Node executable."
        },
        "node.encoding": {
          "type": "string",
          "default": "",
          "enum": [
            "",
            "UTF8",
            "Shift_JIS",
            "Windows-31j",
            "Windows932",
            "EUC-JP",
            "GB2312",
            "GBK",
            "GB18030",
            "Windows936",
            "EUC-CN",
            "KS_C_5601",
            "Windows949",
            "EUC-KR"
          ],
          "description": "STDOUT/STDERR encoding of the Javascript execution process"
        },
        "node.Tmp dir path": {
          "scope": "resource",
          "type": "string",
          "default": "",
          "description": "temporary directory."
        },
        "resultset.Header display comment": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Display column comments in Resultset header"
        },
        "resultset.Header display type": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Display column type in Resultset header"
        },
        "resultset.Display rowno": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Display row number in Resultset"
        },
        "resultset.Max characters in cell": {
          "scope": "resource",
          "type": "number",
          "minimum": 1,
          "maximum": 1000000,
          "default": 100,
          "description": "Maximum number of characters to be displayed in a cell"
        },
        "resultset.Max rows in preview": {
          "scope": "resource",
          "type": "number",
          "minimum": 1,
          "maximum": 1000000,
          "default": 10,
          "description": "Maximum number of rows displayed in preview"
        },
        "resultset.Date format": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "YYYY-MM-DD",
            "YYYY-MM-DD HH:mm:ss"
          ],
          "default": "YYYY-MM-DD",
          "description": "Get the formatted date"
        },
        "resultset.Timestamp format": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "YYYY-MM-DD",
            "YYYY-MM-DD HH:mm:ss",
            "YYYY-MM-DD HH:mm:ss.SSS",
            "YYYY-MM-DDTHH:mm:ss.SSSZ"
          ],
          "default": "YYYY-MM-DD HH:mm:ss",
          "description": "Get the formatted timestamp"
        },
        "resultset.End of Line": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "\n",
            "\r\n",
            "\r"
          ],
          "default": "\n",
          "description": "End of Line"
        },
        "resultset.Binary to Hex": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Binary to Hex"
        },
        "database.Default limit rows": {
          "scope": "resource",
          "type": "number",
          "minimum": 1,
          "maximum": 1000000,
          "default": 100,
          "description": "Specify the number of records to return"
        },
        "output.Excel: display TOC": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Display TOC in Excel"
        },
        "output.Excel: display table-name, sql-statement": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Display table names and SQL statements for each data in Excel"
        },
        "output.Html: display TOC": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Display TOC in HTML"
        },
        "output.Html: display graphs": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Display graphs in HTML"
        },
        "output.Max rows in output file": {
          "scope": "resource",
          "type": "number",
          "minimum": 1,
          "maximum": 1000000,
          "default": 10000,
          "description": "Maximum number of rows displayed in output file"
        },
        "output.Max characters in cell in output file": {
          "scope": "resource",
          "type": "number",
          "minimum": 1,
          "maximum": 1000000,
          "default": 10000,
          "description": "Maximum number of characters to be displayed in a cell in output file"
        }
      }
    }
  },
  "scripts": {
    "install:all": "npm install && cd webview-ui && npm install",
    "start:webview": "cd webview-ui && npm run start",
    "build:webview": "cd webview-ui && yarn build",
    "vscode:prepublish": "npm run build:webview && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@types/bytes": "^3.1.3",
    "@types/glob": "^7.1.3",
    "@types/humanize-duration": "^3.27.2",
    "@types/iconv-lite": "^0.0.1",
    "@types/jmespath": "^0.15.1",
    "@types/node": "14.14.0",
    "@types/qs": "^6.9.9",
    "@types/throttle-debounce": "^5.0.0",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "eslint": "^7.19.0",
    "glob": "^7.1.6",
    "prettier": "^2.2.1",
    "typescript": "^4.1.3",
    "vscode-test": "^1.5.0"
  },
  "dependencies": {
    "@l-v-yonsama/multi-platform-database-drivers": "^0.10.24",
    "@l-v-yonsama/rdh": "^0.2.8",
    "@types/har-format": "^1.2.14",
    "axios": "^1.5.1",
    "axios-har-tracker": "^0.6.1",
    "bytes": "^3.1.2",
    "dayjs": "^1.11.7",
    "exceljs": "^4.3.0",
    "execa": "^5.1.1",
    "fast-json-stable-stringify": "^2.1.0",
    "humanize-duration": "^3.30.0",
    "iconv-lite": "^0.6.3",
    "jmespath": "^0.16.0",
    "qs": "^6.11.2",
    "shelljs": "^0.8.5",
    "shiki": "^0.14.5",
    "short-unique-id": "^4.4.4",
    "sql-formatter-plus": "^1.3.6",
    "store": "^2.0.12",
    "throttle-debounce": "^5.0.0",
    "ts-node": "^10.9.1"
  },
  "volta": {
    "node": "18.13.0",
    "npm": "9.3.1"
  }
}
